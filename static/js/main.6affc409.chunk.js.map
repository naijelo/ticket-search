{"version":3,"sources":["components/Button/Button.js","components/Input/Input.js","components/Pagination/Pagination.js","components/DropDown/DropDown.js","components/Cards/Cards.js","components/TicketSearch/TicketSearch.js","App.js","index.js"],"names":["Button","props","variant","children","rest","className","Input","label","type","required","Pagination","postsPerPage","totalPosts","paginate","pageNumber","i","Math","ceil","push","map","number","onClick","href","DropDown","theme","filteredData","addCity","setCustomInput","setFilteredData","value","key","event","name","Cards","ticketData","loading","dataError","item","index","depart_date","TicketSearch","useState","setDataError","inputFrom","setInputFrom","inputTo","setInputTo","inputDate","setInputDate","fullDate","setFullDate","filteredDataFrom","setFilteredDataFrom","filteredDataTo","setFilteredDataTo","cities","setCities","setTicketData","currentPage","setCurrentPage","indexOfLastCard","indexOfFirstCard","currentCards","slice","useEffect","jsondata","handleFilter","setWordEntered","target","filter","toLowerCase","includes","addCityToState","tagName","textContent","onSubmit","preventDefault","formData","find","code","requestData","from","to","date","axios","then","response","data","best_prices","console","log","catch","err","onInput","length","onChange","placeholderText","selected","dateFormat","fullDateTemp","getFullYear","getMonth","getDate","minDate","Date","title","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6affc409.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Button.css\";\r\n\r\nconst Button = (props) => {\r\n\r\n    const { variant = \"primary\", children, ...rest } = props;\r\n    return (\r\n        <button className={`button ${variant}`} {...rest}>\r\n            {children}\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default Button;","import React from \"react\";\r\nimport \"./Input.css\";\r\n\r\nconst Input = ({variant = \"medium\", children, label, ...rest}) => {\r\n\r\n    return (\r\n        <div>\r\n            <label>{label}\r\n                <input type=\"text\" \r\n                    className={`input ${variant}`} \r\n                    required \r\n                    {...rest}/>\r\n            </label>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Input;","import React from \"react\";\r\nimport \"./Pagination.css\";\r\n\r\nconst Pagination = ({ postsPerPage, totalPosts, paginate }) => {\r\n    const pageNumber = [];\r\n\r\n    for (let i = 1; i <= Math.ceil(totalPosts / postsPerPage); i++) {\r\n        pageNumber.push(i);\r\n    }\r\n\r\n    return (\r\n        <nav>\r\n            <ul className=\"pagination\">\r\n                {pageNumber.map(number => (\r\n                    <li key={number} className=\"pageItem\">\r\n                        <a onClick={() => paginate(number)} href=\"!#\" className=\"pageLink\">\r\n                            {number}\r\n                        </a>\r\n                    </li>\r\n                ) )}\r\n            </ul>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Pagination;","import React from \"react\";\r\nimport \"./DropDown.css\";\r\n\r\nconst DropDown = ({ theme= \"dropdown__lighttheme\",filteredData, addCity, setCustomInput, setFilteredData }) => {\r\n    return (\r\n    <ul className={`dropdown ${theme}`}>\r\n        {filteredData.map((value, key) => {\r\n            return (\r\n                <li className=\"from\" key={key} onClick={event => addCity(event, setCustomInput, setFilteredData)}>\r\n                {value.name}\r\n                </li>\r\n            );\r\n        })}\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default DropDown;","import React from \"react\";\r\n\r\nconst Cards = ({ticketData, loading, dataError}) => {\r\n    if (loading) {\r\n        return <h2>Loading...</h2>\r\n    }\r\n    if (dataError) {\r\n        return <h3>К сожалению, мы ничего не нашли по запросу. Давайте попробуем ещё раз?:)</h3>\r\n    }\r\n    return (\r\n        <ul>{ticketData.map((item, index) => (\r\n                <li key={index}>\r\n                    Дата вылета: {item.depart_date}\r\n                    Цена в рублях: {item.value}\r\n                </li>\r\n    ))}\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default Cards;","import React, {useState, useEffect} from \"react\";\r\nimport \"./TicketSearch.css\";\r\nimport Button from \"../Button/Button\";\r\nimport Input from \"../Input/Input\";\r\nimport Pagination from \"../Pagination/Pagination\";\r\nimport DropDown from \"../DropDown/DropDown\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport Cards from \"../Cards/Cards\";\r\nimport * as axios from \"axios\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport jsondata from '../Input/cities.json';\r\n\r\nconst TicketSearch = (props) => {\r\n\r\n    // const proxy = \"https://cors-anywhere.herokuapp.com/\";\r\n    // const token = \"e44551a4aa602315a353a5fc2d7bed15\";\r\n    // const api = \"http://api.travelpayouts.com/data/ru/cities.json\";\r\n\r\n    //errors\r\n    const [dataError, setDataError] = useState(false);\r\n    //set data into inputs\r\n    const [inputFrom, setInputFrom] = useState(\"\");\r\n    const [inputTo, setInputTo] = useState(\"\");\r\n    \r\n    //get date from inputs\r\n    const [inputDate, setInputDate] = useState(\"\");\r\n    const [fullDate, setFullDate] = useState(\"\");\r\n    \r\n    //filter state and arrow of data from server\r\n    const [filteredDataFrom, setFilteredDataFrom] = useState([]);\r\n    const [filteredDataTo, setFilteredDataTo] = useState([]);\r\n    const [cities, setCities] = useState([]);\r\n    \r\n    const [ticketData, setTicketData] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [postsPerPage] = useState(10);\r\n    \r\n    //paginator support data\r\n    const indexOfLastCard = currentPage * postsPerPage;\r\n    const indexOfFirstCard = indexOfLastCard - postsPerPage;\r\n    const currentCards = ticketData.slice(indexOfFirstCard, indexOfLastCard);\r\n\r\n    const paginate = (pageNumber) => {\r\n        setCurrentPage(pageNumber);\r\n    }\r\n    \r\n    useEffect(() => {\r\n        setCities(jsondata);\r\n    }, []);\r\n    ;\r\n    // useEffect(() => {\r\n    //     const fetchData = async () => {\r\n    //         setLoading(true);\r\n    //         const response = await axios.get(\"/cities.json\");\r\n    //         setCities(response.data);\r\n    //         setLoading(false);\r\n    //     }\r\n    //     fetchData();\r\n    // }, []);\r\n    \r\n    const handleFilter = (event, setFilteredData, setWordEntered) => {\r\n        \r\n        if (event.target.value === \"\") {\r\n            setFilteredData([]);\r\n        } else {\r\n            setFilteredData(cities.filter((value) => {\r\n                return value.name.toLowerCase().includes(event.target.value.toLowerCase());\r\n            }));\r\n        }\r\n        setWordEntered(event.target.value);\r\n    };\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        const formData = {\r\n            \"from\": cities.find((item) => inputFrom === item.name).code,\r\n            \"to\": cities.find((item) => inputTo === item.name).code,\r\n            \"date\": fullDate,\r\n        }\r\n\r\n        const requestData =`?origin=${formData.from}&destination=${formData.to}&depart_day=${formData.date}&one_way=true`;\r\n\r\n        axios.get(\"http://min-prices.aviasales.ru/calendar_preload\" + requestData)\r\n        .then((response) => {\r\n            response = response.data.best_prices;\r\n        console.log(response);\r\n        setTicketData(response)\r\n        })\r\n        .catch(err => {\r\n            setDataError(true);\r\n        });\r\n    };\r\n\r\n    const addCity = (event, addCityToState, setFilteredData) => {\r\n        const target = event.target;\r\n        if (target.tagName.toLowerCase() === \"li\") {\r\n            setFilteredData([]);\r\n            addCityToState(target.textContent);\r\n        }\r\n    }\r\n\r\n    const handleInput = (date) => {\r\n        // const fullYear = date.getFullYear();\r\n        // const month = date.getMonth() + 1;\r\n        // const day = date.getDate();\r\n        // const fullDateTemp = fullYear+\"-\"+month+\"-\"+day;\r\n        const fullDateTemp = `${date.getFullYear()}-${date.getMonth() + 1}-${date.getDate()}`;\r\n        setFullDate(fullDateTemp);\r\n        setInputDate(date);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <form className=\"ticketSearch\"\r\n                onSubmit={handleSubmit}\r\n                >\r\n                <div className=\"inputWrapper\">\r\n                    <div className=\"inputWrapper__from\">\r\n                    <Input label={\"Откуда\"} \r\n                    value={inputFrom}\r\n                    onInput={event => handleFilter(event, setFilteredDataFrom, setInputFrom)} \r\n                    // onInput={event => setInputFrom(event.target.value)}\r\n\r\n                    />\r\n                    \r\n                    {filteredDataFrom.length !== 0 && \r\n                        <DropDown setCustomInput={setInputFrom} \r\n                            filteredData={filteredDataFrom} \r\n                            setFilteredData={setFilteredDataFrom}\r\n                            addCity={addCity}/>}\r\n                        </div>\r\n\r\n                    <Input label={\"Куда\"} \r\n                    value={inputTo}\r\n                    onChange={event => handleFilter(event, setFilteredDataTo, setInputTo)} \r\n                    // onInput={event => setInputTo(event.target.value)}\r\n                    />\r\n                    {filteredDataTo.length !== 0 && \r\n                        <DropDown setCustomInput={setInputTo} \r\n                            filteredData={filteredDataTo} \r\n                            setFilteredData={setFilteredDataTo}\r\n                            addCity={addCity}/>}\r\n\r\n                </div>\r\n\r\n                    <DatePicker \r\n                        placeholderText=\"Выберите дату\"\r\n                        className=\"datepicker\"\r\n                        selected={inputDate}\r\n                        dateFormat=\"yyyy-MM-dd\"\r\n                        onChange={handleInput}\r\n                        minDate={new Date()}\r\n                        required={true}\r\n                    />\r\n\r\n                    <Button title=\"Submit\" \r\n                        children={\"Проверить наличие\"}\r\n                    />\r\n            </form>\r\n\r\n            <Cards ticketData={currentCards} \r\n                    loading={loading}\r\n                    dataError={dataError}/>\r\n            <Pagination postsPerPage={postsPerPage} totalPosts={ticketData.length} paginate={paginate}/>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n    \r\n\r\nexport default TicketSearch;","import \"./App.css\";\nimport TicketSearch from \"./components/TicketSearch/TicketSearch\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <TicketSearch/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}